setwd("C:/Users/Ashley/Desktop/SWC_fall2017/R_intro")
3+5
sqrt(64)
sqrt(64)
print("Wow")
print(64)
print("Wow)
install.packages("knitr")
library(knitr)
?print
help("mean")
#variable
#variable**********
name <- "Jane"
name
price <- 3.99
price
print(price)
mass <- 47.5
ls()
rm(mass)
ls()
mass <- 47.5
rm(name)
ls()
rm(list = ls())
#variables and functions
res <- sqrt(64)
res
age <- 45
length(age)
str(age)
typeof(age)
score <- 79
score
is.integer(score)
typeof(is.integer(score))
typeof(is.integer())
typeof(is.integer(score))
#how to create multi-element variable
v <- c(1:10)
length(v)
str(v)
head(v)
head(v, n=2)
tail(v,n=2)
tail(v,n=3)
help c
help(c)
#manipulate
v <- c(v,56)
v
#vectorization
v1 <- v*2
v1
#change data type
v3 <- as.character(v1)
#change data type
v2 <- as.character(v1)
rm(v3)
#matrices
m <- matrix(c(1:18),3,6)
m
dim(m)
#factor
f <- factor(c("M","F","F"))
f
str(f)
#list
l <- list("Afghanistan",1952,86769)
l
str(l)
length(l)
items <- c("chicken","soup","salad","tea")
desc <- factor("liquid","solid")
desc <- factor(c("liquid","solid"))
cost <- c(4.99,2.99,3.29,1.89)
myOrder <- list(items,desc,cost)
myOrder
desc <- factor(c("solid","liquid","solid","liquid"))
myOrder
length(myOrder)
str(myOrder)
rm(desc)
desc <- factor(c("solid","liquid","solid","liquid"))
myOrder <- list(items,desc,cost)
str(myOrder)
#### COMMANDS FOR SUBSETTING AND WRITING SIMPLE R SCRIPTS #########
menuItems <- c("chicken","soup","salad","tea")
menuType <- factor(c("solid","liquid","solid","liquid"))
menuCost <- c(4.99,2.99,3.29,1.89)
myOrder <- list(menuItems,menuType,menuCost)
myOrder
length(myOrder)
str(myOrder)
length(menuItems)
length(menuType)
length(menuCost)
myOrder_df <- data.frame(menuItems,menuType,menuCost)
myOrder_df
### Subsetting
### By Position Index
v <- c(10:20)
v
v[7]
v[7:10]
v[-c(7:10)]
myOrder[1]
myOrder[3]
myOrder_df
myOrder_df[3,3]
myOrder_df[3,:]
myOrder_df[3,]
### By Name
myOrder_df.menuType
### By Name
myOrder_df$menuType
### By Logical Vectors
## < less than
## > greater than
## == equal to
## <= lesser than or equal to
## >= greater than or equal to
v <- c(2,3,4,5,6)
v1 <- v[v==5]
v2 <- v[v<4]
v1
df1 <- myOrder_df[myOrder_df$menuType=="liquid"]
df1 <- myOrder_df[myOrder_df$menuType=="liquid",]
df1
df2 <- myOrder_df[myOrder_df$menuCost<3.00,]
df2
myOrder_df
df1 <- myOrder_df[myOrder_df$menuType=="solid"]
df1
df1 <- myOrder_df[myOrder_df$menuType=="liquid",]
myData <- read.table("gapminder.txt",header = TRUE)
myData <- read.table("gapminder.txt",header = TRUE)
myData <- read.table("gapminder.txt",header = TRUE)
setwd("C:/Users/Ashley/Desktop/SWC_fall2017")
myData <- read.table("gapminder.txt",header = TRUE)
setwd("C:/Users/Ashley/Desktop/SWC_fall2017/Data")
myData <- read.table("gapminder.txt",header = TRUE)
setwd("C:/Users/Ashley/Desktop/SWC_fall2017/R_intro")
View(myData)
myData[1:6]
myData[,1:6]
myData[1:6,]
help("head")
head(myData)
head(myData,n=5)
dim(myData)
str(myData)
dat1 <- myData[,(3,5)]
dat1 <- myData[,3,5]
dat1
str(myData)
dat2 <- myData[,1]
dat2
dat2 <- myData$country
dat2
dat2 <- unique(myData$country)
dat2
dat3 <- myData[myData$country=="Sweden"]
dat3 <- myData[myData$country=="Sweden",]
dat3
dat4 <- myData[myData$lifeExp<70,]
dat4
str(myData)
new_pop <- myData$pop/10^6
new_pop
myData$pop <- new_pop
myData
str(myData)
dat1 <- myData[myData$year && myData$pop,]
dat1
dat1 <- myData[,myData$year && myData$po]
dat1 <- myData[,myData$year && myData$pop]
dat1
str(myData)
dat1 <- myData[,3]
dat1
dat1 <- myData[3]
dat1
dat1 <- myData[3&&5]
dat1
dat1 <- myData[3]
dat1 <- myData[3:4]
dat1
dat1 <- myData[3:5]
dat1
View(myData)
dat1 <- myData["year","pop"]
dat1
dat1 <- myData[c("year","pop")]
dat1
dat1 <- myData[c(3,5)]
dat1
typeof(myData)
dat1 <- myData[,c(3,5)]
dat2 <- unique(myData$country)
dat1
new_pop <- myData$pop*10^6
myData$pop <- new_pop
new_pop <- myData$pop/10^6
myData$pop_mil <- new_pop
myData
str(myData)
dat4 <- unique(myData[myData$lifeExp<70,myData$country])
dat4 <- unique(myData$country[myData$lifeExp<70,])
myDataFull <- read.table("../gapminder.txt", header=TRUE)
myDataFull <- read.table("../Data/gapminder.txt", header=TRUE)
Canada <- myDataFull[myDataFull$country=="Canada",]
help(plot)
plot(Canada$year,Canada$lifeExp)
help(plot)
plot(Canada$year,Canada$lifeExp,col="blue",type=l)
plot(Canada$year,Canada$lifeExp,col="blue",type="l")
## Plot life expectancy over the years
## Open the file
png(Canada.png)
plot(Canada$year,Canada$lifeExp,col="blue",type="l")
help(png)
## Plot life expectancy over the years
## Open the file
png(filename="Canada.png")
source(PlotLifeExp.R)
source("PlotLifeExp.R")
dat4 <- myData[myData$lifeExp<70,unique(myData$country)]
dat4 <- myData[myData$lifeExp<70,myData$country]
dat4 <- myData[myData$lifeExp<70,c(myData$country)]
dat4 <- myData$country[myData$lifeExp<70,]
dat4 <- myData[myData$lifeExp<70,myData[,"country"]]
gdp_cont <- myData[,c(myData$continent=="Africa",myData$continent=="Europe")]
gdp_cont <- myData[c(myData$continent=="Africa",myData$continent=="Europe"),]
gdp_cont
num_coun <- length(gdp_cont)
num_coun
num_coun <- size(gdp_cont)
num_coun <- nrow(gdp_cont)
num_coun
gdp_cont <- myData[c(myData$continent=="Africa",myData$continent=="Europe"),]
num_coun <- nrow(gdp_cont)
num_coun
gdp_cont1 <- gdp_cont$gdpPercap
gdp_cont1
clear
clc
dat4 <- myData[myData$lifeExp<70,]
dat4 <- dat4[,3]
dat4
dat4 <- unique(dat4[,2])
dat4
dat4 <- (dat4[,2])
dat4 <- myData[myData$lifeExp<70,]
dat4 <- dat4[,2]
dat4
dat4 <- myData[myData$lifeExp<70,]
dat4 <- unique(dat4[,2])
dat4
dat4 <- myData[myData$lifeExp<70,]
dat4
dat4 <- unique(dat4[,1])
dat4
gdp_cont <- myData[c(myData$continent=="Africa",myData$continent=="Europe"),]
gdp_cont
gdp_cont1 <- unique(gdp_cont[,6])
gdp_cont1
gdp_cont1 <- mean(gdp_cont[,6])
gdp_cont1
gdp_cont <- myData[c(myData$continent=="Africa",myData$continent=="Europe"),]
gdp_cont1 <- mean(gdp_cont[,6])
gdp_cont1
gdp_cont1 <- mean(gdp_cont[,6]!=NULL)
gdp_cont1
gdp_cont1 <- mean(gdp_cont[,6]!=NA)
gdp_cont1
gdp_cont1 <- mean(gdp_cont[,6])
gdp_cont
gdp_cont1 <- gdp_cont[,6]
gdp_cont1
gdp_cont1 <- gdp_cont$gdpPercap
gdp_cont1
gdp_cont1 <- mean(gdp_cont$gdpPercap)
gdp_cont1
num_coun <- nrow(gdp_cont1)
afri <- myData[myData$continent=="Africa",]
euro <- myData[myData$continent=="Europe",]
afri_gdp_mean <- mean(afri$gdpPercap)
euro_gdp_mean <- mean(euro$gdpPercap)
help barplot
gdp <- c(afri_gdp_mean,euro_gdp_mean)
barplot(gdp,col="darkgreen",main="Mean GDP",ylab="$",names.arg=c("Africa","Europe"))
